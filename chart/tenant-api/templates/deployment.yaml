---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.api.extraLabels }}
    {{- toYaml .Values.api.extraLabels | nindent 4 }}
    {{- end }}
    {{- if .Values.api.extraAnnotations }}
  annotations:
    {{- toYaml .Values.api.extraAnnotations | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.api.replicas | default 1 }}
  revisionHistoryLimit: 3
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
      {{- include "common.labels.standard" . | nindent 8 }}
      {{- if .Values.api.extraLabels }}
      {{- toYaml .Values.api.extraLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.api.extraAnnotations }}
      annotations:
        {{- toYaml .Values.api.extraAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.api.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.api.db.migrateOnInit  }}
      initContainers:
        - name: {{ .Chart.Name }}-migrate
          envFrom:
            - secretRef:
                name: {{ .Values.api.db.uriSecret }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - migrate
            - up
          volumeMounts:
            {{- if .Values.api.db.certSecret }}
            - name: dbcerts
              mountPath: "{{ .Values.api.db.certMountPath }}"
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: TENANTAPI_SERVER_LISTEN
              value: ":{{ .Values.api.listenPort }}"
            - name: TENANTAPI_SERVER_SHUTDOWN_GRACE_PERIOD
              value: "{{ .Values.api.shutdownGracePeriod }}"
            - name: TENANTAPI_TRACING_ENABLED
              value: "{{ .Values.api.tracing.enabled }}"
            - name: TENANTAPI_TRACING_PROVIDER
              value: "{{ .Values.api.tracing.provider }}"
            - name: TENANTAPI_TRACING_ENVIRONMENT
              value: "{{ .Values.api.tracing.environment }}"
          {{- if eq .Values.api.tracing.provider "jaeger" }}
            - name: TENANTAPI_TRACING_JAEGER_ENDPOINT
              value: "{{ .Values.api.tracing.jaeger.endpoint }}"
            - name: TENANTAPI_TRACING_JAEGER_USER
              value: "{{ .Values.api.tracing.jaeger.user }}"
            - name: TENANTAPI_TRACING_JAEGER_PASSWORD
              value: "{{ .Values.api.tracing.jaeger.password }}"
          {{- end }}
          {{- if eq .Values.api.tracing.provider "otlpgrpc" }}
            - name: TENANTAPI_TRACING_OTLP_ENDPOINT
              value: "{{ .Values.api.tracing.otlp.endpoint }}"
            - name: TENANTAPI_TRACING_OTLP_INSECURE
              value: "{{ .Values.api.tracing.otlp.insecure }}"
            - name: TENANTAPI_TRACING_OTLP_CERTIFICATE
              value: "{{ .Values.api.tracing.otlp.certificate }}"
          {{- end }}
          {{- with .Values.api.trustedProxies }}
            - name: TENANTAPI_SERVER_TRUSTED_PROXIES
              value: "{{ join " " . }}"
          {{- end }}
            - name: TENANTAPI_EVENTS_PUBLISHER_URL
              value: "{{ .Values.api.events.url }}"
            - name: TENANTAPI_EVENTS_PUBLISHER_TIMEOUT
              value: "{{ .Values.api.events.timeout }}"
            - name: TENANTAPI_EVENTS_PUBLISHER_PREFIX
              value: "{{ .Values.api.events.prefix }}"
            - name: TENANTAPI_EVENTS_PUBLISHER_SOURCE
              value: "{{ .Values.api.events.source }}"
            - name: TENANTAPI_PERMISSIONS_URL
              value: "{{ .Values.api.permissions.url }}"
          {{- if .Values.api.events.nats.credsSecretName }}
            - name: TENANTAPI_EVENTS_PUBLISHER_NATS_CREDSFILE
              value: "{{ .Values.api.events.nats.credsFile }}"
          {{- end }}
          {{- if .Values.api.events.nats.token }}
            - name: TENANTAPI_EVENTS_PUBLISHER_NATS_TOKEN
              value: "{{ .Values.api.events.nats.token }}"
          {{- end }}
          {{- if .Values.api.oidc.issuer }}
          {{- with .Values.api.oidc.audience }}
            - name: TENANTAPI_OIDC_AUDIENCE
              value: "{{ . }}"
          {{- end }}
          {{- with .Values.api.oidc.issuer }}
            - name: TENANTAPI_OIDC_ISSUER
              value: "{{ . }}"
          {{- end }}
          {{- with .Values.api.oidc.refreshTimeout }}
            - name: TENANTAPI_OIDC_REFRESH_TIMEOUT
              value: "{{ . }}"
          {{- end }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ .Values.api.db.uriSecret }}
          {{- with .Values.api.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - serve
          ports:
            - name: http
              containerPort: {{ .Values.api.listenPort | default "8080" }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              port: http
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
          volumeMounts:
            {{- if .Values.api.events.nats.credsSecretName  }}
            - name: events-creds
              mountPath: /nats
            {{- end }}
            {{- if .Values.api.db.certSecret }}
            - name: dbcerts
              mountPath: "{{ .Values.api.db.certMountPath }}"
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.api.events.nats.credsSecretName  }}
        - name: events-creds
          secret:
            secretName: "{{ .Values.api.events.nats.credsSecretName }}"
        {{- end }}
        {{- if .Values.api.db.certSecret }}
        - name: dbcerts
          secret:
            secretName: "{{ .Values.api.db.certSecret }}"
        {{- end }}

directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""Input information to create a tenant."""
input CreateTenantInput {
  """The name of a tenant."""
  name: String!
  """An optional description of the tenant."""
  description: String
  parentID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""A valid JSON string."""
scalar JSON
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo @shareable {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query
type Tenant implements Node & ResourceOwner & MetadataNode @key(fields: "id") @prefixedID(prefix: "tnntten") @infratographerRoles(hasRoles: "true", hasParentRoles: "true") {
  """ID for the tenant."""
  id: ID!
  createdAt: Time!
  updatedAt: Time!
  """The name of a tenant."""
  name: String!
  """An optional description of the tenant."""
  description: String
  parent: Tenant
  children(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Tenants returned from the connection."""
    orderBy: TenantOrder

    """Filtering options for Tenants returned from the connection."""
    where: TenantWhereInput
  ): TenantConnection!
}
"""A connection to a list of items."""
type TenantConnection {
  """A list of edges."""
  edges: [TenantEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type TenantEdge {
  """The item at the end of the edge."""
  node: Tenant
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Tenant connections"""
input TenantOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Tenants."""
  field: TenantOrderField!
}
"""Properties by which Tenant connections can be ordered."""
enum TenantOrderField {
  CREATED_AT
  UPDATED_AT
  NAME
}
"""
TenantWhereInput is used for filtering Tenant objects.
Input was generated by ent.
"""
input TenantWhereInput {
  not: TenantWhereInput
  and: [TenantWhereInput!]
  or: [TenantWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """parent edge predicates"""
  hasParent: Boolean
  hasParentWith: [TenantWhereInput!]
  """children edge predicates"""
  hasChildren: Boolean
  hasChildrenWith: [TenantWhereInput!]
}
"""The builtin Time type"""
scalar Time
"""Input information to update a tenant."""
input UpdateTenantInput {
  """The name of a tenant."""
  name: String
  """An optional description of the tenant."""
  description: String
  clearDescription: Boolean
}

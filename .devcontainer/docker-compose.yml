version: '3.8'

networks:
  infradev:

volumes:
  crdb: null
  audit: null

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VARIANT: 1.20-bullseye
        NODE_VERSION: "none"
    command:
      - .devcontainer/scripts/app-entrypoint.sh
    env_file:
      - .env
      - .go.env
    volumes:
      - ./nsc:/nsc
      - ..:/workspace:cached
      - audit:/app-audit
    networks:
      - infradev
    depends_on:
      - init-audit
      - nats
    # Use "forwardPorts" in **devcontainer.json** to forward a port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  fix-perms-audit:
    image: alpine:3.17
    command:
      - ash
      - -c
      - |
        chown -R 1000:1000 /app-audit
    volumes:
      - audit:/app-audit

  init-audit:
    image: ghcr.io/metal-toolbox/audittail:v0.7.0
    command: init -f /app-audit/audit.log
    user: 1000:1000
    depends_on:
      - fix-perms-audit
    volumes:
      - audit:/app-audit

  audit:
    image: ghcr.io/metal-toolbox/audittail:v0.7.0
    command: -f /app-audit/audit.log
    user: 1000:1000
    depends_on:
      - init-audit
    volumes:
      - audit:/app-audit
    restart: unless-stopped

  # Environment setup
  create_databases:
    image: cockroachdb/cockroach:latest-v22.1
    restart: on-failure:5
    command: "sql --insecure -e 'CREATE DATABASE IF NOT EXISTS tenantapi_dev;'"
    env_file:
      - .env
    depends_on:
      - crdb
    networks:
      - infradev

  # Required services (databases, etc)
  crdb:
    image: cockroachdb/cockroach:latest-v22.1
    command: start-single-node --insecure
    restart: unless-stopped
    volumes:
      - crdb:/cockroach/cockroach-data
    env_file:
      - .env
    healthcheck:
      test: "curl --fail http://localhost:8080/health?ready=1 || exit 1"
      interval: "2s"
      retries: 3
      start_period: "15s"
      timeout: "5s"
    networks:
      - infradev

  nats-init:
    image: natsio/nats-box
    environment:
      - NSC_HOME=/nsc
    volumes:
      - ./nsc:/nsc
      - ./nats:/nats
      - ./scripts:/scripts
    command:
      - /scripts/nats_init.sh

  nats:
    image: 'nats:alpine'
    depends_on:
      - nats-init
    command:
      - -c
      - '/etc/nats/nats-server.conf'
      - -D
    volumes:
      - ./nats/:/etc/nats
    restart: unless-stopped
    networks:
      - infradev

version: "3.9"

volumes:
  crdb: null
  audit: null

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VARIANT: 1.20-bullseye
        NODE_VERSION: "none"
    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity
    env_file:
      - .env
    volumes:
      - ../..:/workspaces:cached
      - ./nsc:/nsc
      - audit:/app-audit
      # uncomment to use local SSH keys for dev container access
      #- type: bind
      #  source: ~/.ssh/authorized_keys
      #  target: /home/vscode/.ssh/authorized_keys
      #  read_only: true
    depends_on:
      - crdb
      - nats
    # Use "forwardPorts" in **devcontainer.json** to forward a port locally.

  # Environment setup
  create_databases:
    image: cockroachdb/cockroach:latest-v22.2
    restart: on-failure:5
    command: "sql --insecure -e 'CREATE DATABASE IF NOT EXISTS tenant_api_dev; CREATE DATABASE IF NOT EXISTS tenant_api_test; CREATE DATABASE IF NOT EXISTS atlas_migrations;'"
    env_file:
      - .env
    depends_on:
      - crdb

  fix-perms-audit:
    image: alpine:3.18
    command:
      - ash
      - -c
      - |
        chown -R 1000:1000 /app-audit
    volumes:
      - audit:/app-audit

  init-audit:
    image: ghcr.io/metal-toolbox/audittail:v0.8.0
    command: init -f /app-audit/audit.log
    user: 1000:1000
    depends_on:
      - fix-perms-audit
    volumes:
      - audit:/app-audit

  audit:
    image: ghcr.io/metal-toolbox/audittail:v0.8.0
    command: -f /app-audit/audit.log
    user: 1000:1000
    depends_on:
      - init-audit
    volumes:
      - audit:/app-audit
    restart: unless-stopped

  # Required services (databases, etc)
  crdb:
    image: cockroachdb/cockroach:latest-v22.2
    command: start-single-node --insecure
    restart: unless-stopped
    volumes:
      - crdb:/cockroach/cockroach-data
    env_file:
      - .env
    healthcheck:
      test: "curl --fail http://localhost:8080/health?ready=1 || exit 1"
      interval: "2s"
      retries: 3
      start_period: "15s"
      timeout: "5s"

  nats-init:
    image: natsio/nats-box
    environment:
      - NSC_HOME=/nsc
    volumes:
      - ./nsc:/nsc
      - ./nats:/nats
      - ./scripts:/scripts
    command:
      - /scripts/nats_init.sh

  nats:
    image: "nats:alpine"
    depends_on:
      - nats-init
    command:
      - -c
      - "/etc/nats/nats-server.conf"
      - -D
    volumes:
      - ./nats/:/etc/nats
    restart: unless-stopped

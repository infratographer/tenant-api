package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"

	"go.infratographer.com/x/gidx"

	"go.infratographer.com/tenant-api/internal/ent/generated"
)

// TenantCreate is the resolver for the tenantCreate field.
func (r *mutationResolver) TenantCreate(ctx context.Context, input generated.CreateTenantInput) (*TenantCreatePayload, error) {
	// TODO: auth check
	// if input.TenantID == nil {
	// 	auth check that actor can make root tenants
	// } else {
	// 	auth check that actor can make tenants in parent tenant
	// }
	tnt, err := r.client.Tenant.Create().SetInput(input).Save(ctx)
	if err != nil {
		return nil, err
	}

	return &TenantCreatePayload{Tenant: tnt}, nil
}

// Tenant is the resolver for the tenant field.
func (r *queryResolver) Tenant(ctx context.Context, id gidx.PrefixedID) (*generated.Tenant, error) {
	// TODO: Auth Check
	return r.client.Tenant.Get(ctx, id)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
